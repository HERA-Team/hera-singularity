# =============================================================================
# Definition file for singularity containers for the HERA software stack.
# All containers come standard with the following Python packages:
#
# |-------------------------------------------------|
# |  Data Analysis |  Astronomical    |  HERA       |
# |----------------|------------------|-------------|
# |  dask	   |  aipy	      |  linsolve   |
# |  jupyterlab	   |  astropy	      |  uvtools    |
# |  matplotlib	   |  astropy-healpix |  hera_qm    |
# |  numpy	   |  astroquery      |  hera_cal   |
# |  pandas	   |  cartopy	      |  hera_sim   |
# |  scipy	   |  healpy	      |  hera_psepc |
# |  scikit-learn  |  pyuvdata1       |	            |
# |  xarray	   |  pyuvsim         |             |
# |                |  SSINS3          |             |
# |-------------------------------------------------|
#
# This container is built for running the HERA OMP pipeline and come with the
# following addition:
# - hera_opm
# - hera_mc
# - hera_notebook_templates.
# - hera_pipelines cloned to /usr/local
# =============================================================================
Bootstrap: library
From: ubuntu:20.04


# -----------------------------------------------------------------------------
# - Runtime environment variables -
# Define environment variables that will be set at runtime.
# -----------------------------------------------------------------------------
%environment
  # conda install path
  export CONDA_PATH="/usr/local/miniconda3"
  # conda initialization script
  export CONDA_SH="$CONDA_PATH/etc/profile.d/conda.sh"
  # Prepend PATH with conda/python bin
  export PATH=${CONDA_PATH}/bin:${PATH}
  export PATH=${CONDA_PATH}/envs/rtp/bin:${PATH}
  # hera_pipelines path
  export HERA_PIPELINES_PATH="/usr/local/hera_pipelines"


# -----------------------------------------------------------------------------
# - Built commands -
# Commands to be executed at build time after the base OS has been installed.
# These commands are executed as root in /root inside the container.
# -----------------------------------------------------------------------------
%post
  # Update Ubuntu packages and install necessary packages
  apt-get update && apt-get install -y git wget vim

  # Fix locale bugs see https://github.com/hpcng/singularity/issues/11
  apt-get install -y locales && \
  echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen && \
  locale-gen && update-locale LANG=en_US.UTF-8

  apt-get clean

  # DONE with OS install and update

  # Define environment variables for install paths
  INSTALL_PATH="/usr/local"
  CONDA_PATH="$INSTALL_PATH/miniconda3"
  CONDA_SH="$CONDA_PATH/etc/profile.d/conda.sh"

  # Download and install miniconda
  cd $INSTALL_PATH && \
  wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
  bash Miniconda3-latest-Linux-x86_64.sh -b -p $CONDA_PATH && \
  rm Miniconda3-latest-Linux-x86_64.sh

  # Make conda executable available during build and update.
  # This does not make the executable available during runtime.
  . $CONDA_SH && conda update -n base conda

  # Create `rtp` enviroment and install dependencies for HEREA packages.
  conda create -n rtp -c conda-forge python=3.10 ipython ipykernel numpy scipy \
    scikit-learn matplotlib pandas astropy astropy-healpix astroquery \
    aipy healpy pyuvdata h5py pyyaml click python-casacore cartopy \
    xarray netcdf4 h5netcdf mpi4py dask jupyterlab ipympl \
    psutil pytest future \
    alembic psycopg2 redis-py

  # Activate the Python environment
  conda activate rtp

  # Install pyuvsim and pyradiosky
  # pip install pyuvsim[sim]

  # Install pygdsm
  # pip install git+https://github.com/telegraphic/pygdsm

  # Install SSINS
  pip install git+https://github.com/mwilensky768/SSINS.git

  # Install HERA packages.
  pip install linsolve uvtools hera_qm hera-calibration vis_cpu hera_sim hera-mc hera_opm
  pip install git+https://github.com/hera-team/hera_pspec
  pip install --no-deps git+https://github.com/hera-team/hera_notebook_templates

  # Also clone hera-pipelines
  cd /usr/local && git clone https://github.com/HERA-Team/hera_pipelines

  echo "== Done building container =="


%labels
  Author HERA Team


%help
  This container is equivalent to `hera1` with an addition of a few other
  HERA software packages for running the HERA RTP pipeline and
  `makeflow` analysis.
